import numpy
from Simbolos import *

class Cubo:
    sem = numpy.zeros((101, 101, 101))
    
    # Variables: int, dec, string, boolean
    # operadores: +, - , *, /, >=, <=, ==, !=, &, |, =
    
    def __init__(self):
        # Operadores aritmeticos (int)
        self.sem[code['int']][code['int']][code['+']] = code['int']
        self.sem[code['int']][code['dec']]  [code['+']] = code['dec']
        self.sem[code['int']][code['string']][code['+']] = code['error']
        self.sem[code['int']][code['boolean']]  [code['+']] = code['error']
        self.sem[code['int']][code['int']][code['-']] = code['int']
        self.sem[code['int']][code['dec']]  [code['-']] = code['dec']
        self.sem[code['int']][code['string']][code['-']] = code['error']
        self.sem[code['int']][code['boolean']]  [code['-']] = code['error']
        self.sem[code['int']][code['int']][code['*']] = code['int']
        self.sem[code['int']][code['dec']]  [code['*']] = code['dec']
        self.sem[code['int']][code['string']][code['*']] = code['error']
        self.sem[code['int']][code['boolean']]  [code['*']] = code['error']
        self.sem[code['int']][code['int']][code['/']] = code['int']
        self.sem[code['int']][code['dec']]  [code['/']] = code['dec']
        self.sem[code['int']][code['string']][code['/']] = code['error']
        self.sem[code['int']][code['boolean']]  [code['/']] = code['error']

        # Operadores relacionales (int)
        self.sem[code['int']][code['int']][code['>']] = code['boolean']
        self.sem[code['int']][code['dec']]  [code['>']] = code['boolean']
        self.sem[code['int']][code['string']][code['>']] = code['error']
        self.sem[code['int']][code['boolean']]  [code['>']] = code['error']
        self.sem[code['int']][code['int']][code['<']] = code['boolean']
        self.sem[code['int']][code['dec']]  [code['<']] = code['boolean']
        self.sem[code['int']][code['string']][code['<']] = code['error']
        self.sem[code['int']][code['boolean']]  [code['<']] = code['error']

        self.sem[code['int']][code['int']][code['>=']] = code['boolean']
        self.sem[code['int']][code['dec']]  [code['>=']] = code['boolean']
        self.sem[code['int']][code['string']][code['>=']] = code['error']
        self.sem[code['int']][code['boolean']]  [code['>=']] = code['error']
        self.sem[code['int']][code['int']][code['<=']] = code['boolean']
        self.sem[code['int']][code['dec']]  [code['<=']] = code['boolean']
        self.sem[code['int']][code['string']][code['<=']] = code['error']
        self.sem[code['int']][code['boolean']]  [code['<=']] = code['error']
        self.sem[code['int']][code['int']][code['==']] = code['boolean']
        self.sem[code['int']][code['dec']]  [code['==']] = code['boolean']
        self.sem[code['int']][code['string']][code['==']] = code['error']
        self.sem[code['int']][code['boolean']]  [code['==']] = code['error']
        self.sem[code['int']][code['int']][code['!=']] = code['boolean']
        self.sem[code['int']][code['dec']]  [code['!=']] = code['boolean']
        self.sem[code['int']][code['string']][code['!=']] = code['error']
        self.sem[code['int']][code['boolean']]  [code['!=']] = code['error']

        # Operadores logicos (int)
        self.sem[code['int']][code['int']][code['&']] = code['error']
        self.sem[code['int']][code['dec']]  [code['&']] = code['error']
        self.sem[code['int']][code['string']][code['&']] = code['error']
        self.sem[code['int']][code['boolean']]  [code['&']] = code['error']
        self.sem[code['int']][code['int']][code['|']] = code['error']
        self.sem[code['int']][code['dec']]  [code['|']] = code['error']
        self.sem[code['int']][code['string']][code['|']] = code['error']
        self.sem[code['int']][code['boolean']]  [code['|']] = code['error']

        # Asignación
        self.sem[code['int']][code['int']][code['=']] = code['int']
        self.sem[code['int']][code['dec']][code['=']] = code['int']
        self.sem[code['int']][code['string']][code['=']] = code['error']
        self.sem[code['int']][code['boolean']][code['=']] = code['error']
        self.sem[code['int']][code['nulo']]  [code['!']] = code['error']
        
        # Operadores aritmeticos (dec)
        self.sem[code['dec']][code['int']][code['+']] = code['dec']
        self.sem[code['dec']][code['dec']]  [code['+']] = code['dec']
        self.sem[code['dec']][code['string']][code['+']] = code['error']
        self.sem[code['dec']][code['boolean']]  [code['+']] = code['error']
        self.sem[code['dec']][code['int']][code['-']] = code['dec']
        self.sem[code['dec']][code['dec']]  [code['-']] = code['dec']
        self.sem[code['dec']][code['string']][code['-']] = code['error']
        self.sem[code['dec']][code['boolean']]  [code['-']] = code['error']
        self.sem[code['dec']][code['int']][code['*']] = code['dec']
        self.sem[code['dec']][code['dec']]  [code['*']] = code['dec']
        self.sem[code['dec']][code['string']][code['*']] = code['error']
        self.sem[code['dec']][code['boolean']]  [code['*']] = code['error']
        self.sem[code['dec']][code['int']][code['/']] = code['dec']
        self.sem[code['dec']][code['dec']]  [code['/']] = code['dec']
        self.sem[code['dec']][code['string']][code['/']] = code['error']
        self.sem[code['dec']][code['boolean']]  [code['/']] = code['error']

        # Operadores relacionales (dec)
        self.sem[code['dec']][code['int']][code['>']] = code['boolean']
        self.sem[code['dec']][code['dec']]  [code['>']] = code['boolean']
        self.sem[code['dec']][code['string']][code['>']] = code['error']
        self.sem[code['dec']][code['boolean']]  [code['>']] = code['error']
        self.sem[code['dec']][code['int']][code['<']] = code['boolean']
        self.sem[code['dec']][code['dec']]  [code['<']] = code['boolean']
        self.sem[code['dec']][code['string']][code['<']] = code['error']
        self.sem[code['dec']][code['boolean']]  [code['<']] = code['error']

        self.sem[code['dec']][code['int']][code['>=']] = code['boolean']
        self.sem[code['dec']][code['dec']]  [code['>=']] = code['boolean']
        self.sem[code['dec']][code['string']][code['>=']] = code['error']
        self.sem[code['dec']][code['boolean']]  [code['>=']] = code['error']
        self.sem[code['dec']][code['int']][code['<=']] = code['boolean']
        self.sem[code['dec']][code['dec']]  [code['<=']] = code['boolean']
        self.sem[code['dec']][code['string']][code['<=']] = code['error']
        self.sem[code['dec']][code['boolean']]  [code['<=']] = code['error']
        self.sem[code['dec']][code['int']][code['==']] = code['boolean']
        self.sem[code['dec']][code['dec']]  [code['==']] = code['boolean']
        self.sem[code['dec']][code['string']][code['==']] = code['error']
        self.sem[code['dec']][code['boolean']]  [code['==']] = code['error']
        self.sem[code['dec']][code['int']][code['!=']] = code['boolean']
        self.sem[code['dec']][code['dec']]  [code['!=']] = code['boolean']
        self.sem[code['dec']][code['string']][code['!=']] = code['error']
        self.sem[code['dec']][code['boolean']]  [code['!=']] = code['error']

        # Operadores logicos (int)
        self.sem[code['dec']][code['int']][code['&']] = code['error']
        self.sem[code['dec']][code['dec']]  [code['&']] = code['error']
        self.sem[code['dec']][code['string']][code['&']] = code['error']
        self.sem[code['dec']][code['boolean']]  [code['&']] = code['error']
        self.sem[code['dec']][code['int']][code['|']] = code['error']
        self.sem[code['dec']][code['dec']]  [code['|']] = code['error']
        self.sem[code['dec']][code['string']][code['|']] = code['error']
        self.sem[code['dec']][code['boolean']]  [code['|']] = code['error']

        # Asignación (dec)
        self.sem[code['dec']][code['int']][code['=']] = code['dec']
        self.sem[code['dec']][code['dec']]  [code['=']] = code['dec']
        self.sem[code['dec']][code['string']][code['=']] = code['error']
        self.sem[code['dec']][code['boolean']]  [code['=']] = code['error']
        self.sem[code['dec']][code['nulo']]  [code['!']] = code['error']

        self.sem[code['string']][code['int']][code['+']] = code['error']
        self.sem[code['string']][code['dec']]  [code['+']] = code['error']
        self.sem[code['string']][code['string']][code['+']] = code['string']
        self.sem[code['string']][code['boolean']]  [code['+']] = code['error']
        self.sem[code['string']][code['int']][code['-']] = code['error']
        self.sem[code['string']][code['dec']]  [code['-']] = code['error']
        self.sem[code['string']][code['string']][code['-']] = code['error']
        self.sem[code['string']][code['boolean']]  [code['-']] = code['error']
        self.sem[code['string']][code['int']][code['*']] = code['error']
        self.sem[code['string']][code['dec']]  [code['*']] = code['error']
        self.sem[code['string']][code['string']][code['*']] = code['error']
        self.sem[code['string']][code['boolean']]  [code['*']] = code['error']
        self.sem[code['string']][code['int']][code['/']] = code['error']
        self.sem[code['string']][code['dec']]  [code['/']] = code['error']
        self.sem[code['string']][code['string']][code['/']] = code['error']
        self.sem[code['string']][code['boolean']]  [code['/']] = code['error']

        self.sem[code['string']][code['int']][code['>']] = code['error']
        self.sem[code['string']][code['dec']]  [code['>']] = code['error']
        self.sem[code['string']][code['string']][code['>']] = code['boolean']
        self.sem[code['string']][code['boolean']] [code['>']] = code['error']
        self.sem[code['string']][code['int']][code['<']] = code['error']
        self.sem[code['string']][code['dec']]  [code['<']] = code['error']
        self.sem[code['string']][code['string']][code['<']] = code['boolean']
        self.sem[code['string']][code['boolean']]  [code['<']] = code['error']

        self.sem[code['string']][code['int']][code['>=']] = code['error']
        self.sem[code['string']][code['dec']]  [code['>=']] = code['error']
        self.sem[code['string']][code['string']][code['>=']] = code['boolean']
        self.sem[code['string']][code['boolean']]  [code['>=']] = code['error']
        self.sem[code['string']][code['int']][code['<=']] = code['error']
        self.sem[code['string']][code['dec']]  [code['<=']] = code['error']
        self.sem[code['string']][code['string']][code['<=']] = code['boolean']
        self.sem[code['string']][code['boolean']]  [code['<=']] = code['error']
        self.sem[code['string']][code['int']][code['==']] = code['error']
        self.sem[code['string']][code['dec']]  [code['==']] = code['error']
        self.sem[code['string']][code['string']][code['==']] = code['boolean']
        self.sem[code['string']][code['boolean']]  [code['==']] = code['error']
        self.sem[code['string']][code['int']][code['!=']] = code['error']
        self.sem[code['string']][code['dec']]  [code['!=']] = code['error']
        self.sem[code['string']][code['string']][code['!=']] = code['string']
        self.sem[code['string']][code['boolean']]  [code['!=']] = code['error']
        self.sem[code['string']][code['int']][code['&']] = code['error']
        self.sem[code['string']][code['dec']]  [code['&']] = code['error']
        self.sem[code['string']][code['string']][code['&']] = code['error']
        self.sem[code['string']][code['boolean']]  [code['&']] = code['error']
        self.sem[code['string']][code['int']][code['|']] = code['error']
        self.sem[code['string']][code['dec']]  [code['|']] = code['error']
        self.sem[code['string']][code['string']][code['|']] = code['error']
        self.sem[code['string']][code['boolean']]  [code['|']] = code['error']
        self.sem[code['string']][code['int']][code['=']] = code['error']
        self.sem[code['string']][code['dec']]  [code['=']] = code['error']
        self.sem[code['string']][code['string']][code['=']] = code['string']
        self.sem[code['string']][code['boolean']]  [code['=']] = code['error']
        self.sem[code['string']][code['nulo']]  [code['!']] = code['error']
        
        self.sem[code['boolean']][code['int']][code['+']] = code['error']
        self.sem[code['boolean']][code['dec']]  [code['+']] = code['error']
        self.sem[code['boolean']][code['string']][code['+']] = code['error']
        self.sem[code['boolean']][code['boolean']]  [code['+']] = code['error']
        self.sem[code['boolean']][code['int']][code['-']] = code['error']
        self.sem[code['boolean']][code['dec']]  [code['-']] = code['error']
        self.sem[code['boolean']][code['string']][code['-']] = code['error']
        self.sem[code['boolean']][code['boolean']]  [code['-']] = code['error']
        self.sem[code['boolean']][code['int']][code['*']] = code['error']
        self.sem[code['boolean']][code['dec']]  [code['*']] = code['error']
        self.sem[code['boolean']][code['string']][code['*']] = code['error']
        self.sem[code['boolean']][code['boolean']]  [code['*']] = code['error']
        self.sem[code['boolean']][code['int']][code['/']] = code['error']
        self.sem[code['boolean']][code['dec']]  [code['/']] = code['error']
        self.sem[code['boolean']][code['string']][code['/']] = code['error']
        self.sem[code['boolean']][code['boolean']]  [code['/']] = code['error']

        self.sem[code['boolean']][code['int']][code['>']] = code['error']
        self.sem[code['boolean']][code['dec']]  [code['>']] = code['error']
        self.sem[code['boolean']][code['string']][code['>']] = code['error']
        self.sem[code['boolean']][code['boolean']]  [code['>']] = code['boolean']
        self.sem[code['boolean']][code['int']][code['<']] = code['error']
        self.sem[code['boolean']][code['dec']]  [code['<']] = code['error']
        self.sem[code['boolean']][code['string']][code['<']] = code['error']
        self.sem[code['boolean']][code['boolean']]  [code['<']] = code['boolean']

        self.sem[code['boolean']][code['int']][code['>=']] = code['error']
        self.sem[code['boolean']][code['dec']]  [code['>=']] = code['error']
        self.sem[code['boolean']][code['string']][code['>=']] = code['error']
        self.sem[code['boolean']][code['boolean']]  [code['>=']] = code['boolean']
        self.sem[code['boolean']][code['int']][code['<=']] = code['error']
        self.sem[code['boolean']][code['dec']]  [code['<=']] = code['error']
        self.sem[code['boolean']][code['string']][code['<=']] = code['error']
        self.sem[code['boolean']][code['boolean']]  [code['<=']] = code['boolean']
        self.sem[code['boolean']][code['int']][code['==']] = code['error']
        self.sem[code['boolean']][code['dec']]  [code['==']] = code['error']
        self.sem[code['boolean']][code['string']][code['==']] = code['error']
        self.sem[code['boolean']][code['boolean']]  [code['==']] = code['boolean']
        self.sem[code['boolean']][code['int']][code['!=']] = code['error']
        self.sem[code['boolean']][code['dec']]  [code['!=']] = code['error']
        self.sem[code['boolean']][code['string']][code['!=']] = code['error']
        self.sem[code['boolean']][code['boolean']]  [code['!=']] = code['boolean']
        self.sem[code['boolean']][code['int']][code['&']] = code['error']
        self.sem[code['boolean']][code['dec']]  [code['&']] = code['error']
        self.sem[code['boolean']][code['string']][code['&']] = code['error']
        self.sem[code['boolean']][code['boolean']]  [code['&']] = code['boolean']
        self.sem[code['boolean']][code['int']][code['|']] = code['error']
        self.sem[code['boolean']][code['dec']]  [code['|']] = code['error']
        self.sem[code['boolean']][code['string']][code['|']] = code['error']
        self.sem[code['boolean']][code['boolean']]  [code['|']] = code['boolean']
        self.sem[code['boolean']][code['int']][code['=']] = code['error']
        self.sem[code['boolean']][code['dec']]  [code['=']] = code['error']
        self.sem[code['boolean']][code['string']][code['=']] = code['error']
        self.sem[code['boolean']][code['boolean']]  [code['=']] = code['boolean']
        self.sem[code['boolean']][code['nulo']]  [code['!']] = code['boolean']
        
    def revisar(self, op1, op2, operador):
        return simbol(self.sem[abs(op1)][abs(op2)][operador])